name: CCDA parsing run workflow
run-name: ${{ github.actor }} is doing a test run of the CCDA parsing
on: [push]
jobs:
    Just-Run:
        runs-on: ubuntu-latest
        steps:
          - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
          - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
          - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
          - name: Check out repository code
            uses: actions/checkout@v4
          - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
          - run: echo "🖥️ The workflow is now ready to test your code on the runner."
          - name: List files in the repository
            run: |
              ls ${{ github.workspace }}
          - name: List files in the repository tests directory
            run: |
              ls ${{ github.workspace }}/tests
          - run: echo "🍏 This job's status is ${{ job.status }}."
          - name: Display Python Version
            run: python -c "import sys; print(sys.version)"
          - name: run main.py 
            run: |
                python3 main.py -n=2
    Lint-Flake8:
        runs-on: ubuntu-latest
        steps:
          - name: Install linters
            run: |
                pip install pylint
                pip install flake8
          - name: Check out repository code
            uses: actions/checkout@v4
          - name: Lint with flake8
            run: |
                flake8 *.py --count --select=E9,F36,F92 --show-source --max-line-length=100--statistics
                flake8 *.py  --count --max-complexity=10 --max-line-length=100 --statistics
    Lint-Pylint:
        runs-on: ubuntu-latest
        steps:
          - name: Install linters
            run: |
                pip install pylint
                pip install flake8
          - name: Check out repository code
            uses: actions/checkout@v4
          - name: Lint with Pylint
            run: |
                pylint  *.py
