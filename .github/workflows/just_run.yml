name: CCDA parsing with Spark
run-name: ${{ github.actor }} is doing a test run of the CCDA parsing
on: [push]
jobs:
    TEST:
        runs-on: ubuntu-latest
        steps:
        - name chain-commands
            shell: bash
            run: |
              echo "one"
    Run-main:
        runs-on: ubuntu-latest
        steps:
          - name: Check out repository code
            uses: actions/checkout@v4
            with:
              ref: main
          - name: show starting files 
            shell: bash
            run: |
                ls
          - name: set the ssh key
            run: |
                eval $(ssh-agent -s); SSH_KEY = "${{ secrets.GH_WF }}"; echo "YO: ${{ secrets.GH_WF }} "; echo "$SSH_KEY" | ssh-add -
          - name: get data
            uses: actions/checkout@main
            with:
                repository: chrisroederucdenver/CCDA_OMOP_Private
                path: './ref_data'
                ref: main
          - name: show after files 
            shell: bash
            run: |
                ls
          - name: show ref_data files 
            shell: bash
            run: |
                ls ref_data
          - name: show current working directory 
            shell: bash
            run: |
                pwd
          - name: Install pyspark
            run: |
                pip install pyspark
          - name: run main.py 
            run: |
                python3 main.py -n=2
    Lint-Flake8:
        runs-on: ubuntu-latest
        steps:
          - name: Install linters
            run: |
                pip install flake8
          - name: Install pyspark
            run: |
                pip install pyspark
          - name: Check out repository code
            uses: actions/checkout@v4
            with:
              ref: main
          - name: Lint with flake8
            run: |
                flake8 *.py --count --select=E9,F36,F92 --show-source --max-line-length=100 --statistics
                flake8 *.py  --count --max-complexity=10 --max-line-length=100 --statistics
    Lint-Pylint:
        runs-on: ubuntu-latest
        steps:
          - name: Install linters
            run: |
                pip install pylint
          - name: Install pyspark
            run: |
                pip install pyspark
          - name: Check out repository code
            uses: actions/checkout@v4
            with:
              ref: main
          - name: Lint with Pylint
            run: |
                pylint --max-locals=25  *.py

