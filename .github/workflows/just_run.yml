name: CCDA parsing with Spark
run-name: ${{ github.actor }} is doing a test run of the CCDA parsing
on: [push, workflow_dispatch]
jobs:
    Run-prototype-1:
        runs-on: ubuntu-latest
        steps:
          - name: Check out repository code
            uses: actions/checkout@v4
            with:
              ref: main
          - name:  Get vocabulary data from private repo
            shell: bash
            run: |
              eval $(ssh-agent -s)
              echo "${{ secrets.GH_WF }}" | ssh-add -
              ssh -T git@github.com   || true
              git clone git@github.com:chrisroederucdenver/CCDA_OMOP_Private.git
              mv CCDA_OMOP_Private ref_data
          - name: show ref_data files
            shell: bash
            run: |
                ls ref_data
                pwd
          - name: Install pyspark
            run: |
                pip install pyspark
          - name: run protoype/main.py
            run: |
                python3 -m prototype.main -n=2
          - name: Run test_util_spark
            run: |
                python3 -m test_spark_util
    Run-snoopers:
        runs-on: ubuntu-latest
        steps:
          - name: Check out repository code
            uses: actions/checkout@v4
            with:
              ref: main
          - name:  Get vocabulary data from private repo
            shell: bash
            run: |
              eval $(ssh-agent -s)
              echo "${{ secrets.GH_WF }}" | ssh-add -
              ssh -T git@github.com   || true
              git clone git@github.com:chrisroederucdenver/CCDA_OMOP_Private.git
              mv CCDA_OMOP_Private ref_data
          - name: show ref_data files
            shell: bash
            run: |
                ls ref_data
                pwd
          - name: Install pyspark
            run: |
                pip install pyspark
          - name: Run (generic) Snooper
            run: |
                python3 -m tools.header_snooper
          - name: Run (generic) Snooper
            run: |
                python3 -m tools.section_snooper
    Run-prototype-2:
        runs-on: ubuntu-latest
        steps:
          - name: Check out repository code
            uses: actions/checkout@v4
            with:
              ref: main
          - name: change directory to prototype_2
            shell: bash
            run: |
                ls
                cd prototype_2
                pwd
                ls
          - name: Install pandas
            run: |
                pip install pandas
          - name: Run parse.py
            run: |
                python3 -m parse
          - name: Run data_driven_parse.py
            run: |
                python3 -m data_driven_parse
          - name: Run layer_datsets.py
            run: |
                python3 -m layer_datasets
    Lint-Flake8:
        runs-on: ubuntu-latest
        steps:
          - name: Install linters
            run: |
                pip install flake8
          - name: Install pyspark
            run: |
                pip install pyspark
          - name: Check out repository code
            uses: actions/checkout@v4
            with:
              ref: main
          - name: Lint with flake8
            run: |
                flake8 *.py --count --select=E9,F36,F92 --show-source --max-line-length=100 --statistics
                flake8 *.py --count --max-complexity=10 --max-line-length=100 --statistics
                flake8 tools/*.py --count --select=E9,F36,F92 --show-source --max-line-length=100 --statistics
                flake8 tools/*.py --count --max-complexity=10 --max-line-length=100 --statistics
                flake8 util/*.py --count --select=E9,F36,F92 --show-source --max-line-length=100 --statistics
                flake8 util/*.py --count --max-complexity=10 --max-line-length=100 --statistics
    Lint-Pylint:
        runs-on: ubuntu-latest
        steps:
          - name: Install linters
            run: |
                pip install pylint
          - name: Install pyspark
            run: |
                pip install pyspark
          - name: Check out repository code
            uses: actions/checkout@v4
            with:
              ref: main
          - name: Lint with Pylint
            run: |
                pylint --max-locals=25  *.py */*.py
    notes-on-what-does-not-work:
        if: false
        runs-on: ubuntu-latest
        steps:
          - name: setenv and start agent BOGUS
            shell: bash
            run: |
              eval $(ssh-agent -s)
              echo "SSH_PUBLIC_KEY=$( echo "${{ secrets.GH_WF }}" | cut -c 1-70) " >> "$GITHUB_ENV"
          - name: get data with key setup part 1
            shell: bash
            run: |
              eval $(ssh-agent -s)
              echo "${{ secrets.GH_WF }}" | ssh-add -
              ssh -T git@github.com  
          - name: get data with key setup part 2, can't make part 1 and part 2 part of the same
            uses: actions/checkout@main
            with:
                repository: chrisroederucdenver/CCDA_OMOP_Private
                path: './ref_data'
                ref: main
